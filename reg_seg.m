%function   [res, vol] = extract_feat_par(fname, method, use_snake, n_block, tot_blocks, min_area_flags )

n_block = 1;
method =1;
use_snake=0;
fname ='Q:\Data\20191127_HuADhigh\hFTAA_100_AT8-647_20_OV_X21850_Y66178_647_nm_405-488-561-640-Quadrupleblock_1x_Both_000001.tif';
tot_blocks = 1;

% if method == 0 use global Otsu, otherwise 1 use adaptive threshold of Bradley and Roth.
info = imfinfo(fname);
num_images =  numel(info);
min_th = 0.05; %If the Otsu or Bradley&Roth are too conservative, add this minimum value to the threshold
maxIterations  = 50; %It the active contounrs is used to remove the meningis, how many iterations
min_area = 10; %Plaques can be of a minimum number of pixels otherwise they are artefacts
%Not Used:
max_area = 1500; %Plaques can be of a maximum number of pixels otherwise they are artefacts

length_block = floor(num_images/tot_blocks);

temp = imread(fname); %Read only the first to get the size of the stack
[r,c] = size(temp);
data = zeros(r,c,length_block,'uint16');
if(use_snake)
     mask = zeros(size(temp));
     mask(25:end-25,25:end-25) = 1;
end
 
 
% Load data
% There are other faster image loader but sometimes they are not able to
% read big files generated by Terastitcher
% Other readers are faster but unfortunately terastitcher removes important tags in the header
% it is better to use this slow way.
count = 1;
for k = 1 + ( (n_block-1)*length_block )   :   length_block + ( (n_block-1)*length_block )
        data(:,:,count ) = (imread(fname, k)); %imadjust
        k
        % use_snakes == 1, do the active contours to remove artefacts and signals at the meningis 
        if(use_snake)
           snake = activecontour(data(:,:,count ), mask, maxIterations, 'Chan-Vese');
           data(:,:,count ) = data(:,:,count ).*snake;
        end
        count = count +1;
end
 % Rough background to estimate the convex hull (this needs to be improved)
foreground =  imbinarize(data,0.01); 
%foreground = imfill(foreground,'holes');


% threshold
% if method == 0 use global Otsu, otherwise 1 use adaptive threshold of Bradley and Roth.
if (method)
   % According to Bradley and Roth, use the max value of the adaptive
   T = ( ( (adaptthresh(data))));
else
   % Global Otsu  
   T = graythresh(data);   
   if (T == 0)
      T = min_th;
   end
end
 
bw = imbinarize(data,max(max(max(T))));
%bw = imbinarize(data, T  );



%Remove segmentations smaller than an area
labeled_data = bwlabeln(bw);

BW2 = bwareaopen(bw, min_area);
 

%Count all connected elements
res = max(max(max(bwlabeln(BW2)))) ;
vol = sum( sum( sum( BW2 ) )) ;

% Resize to 1 third to 
%bw_small = (imresize(uint8(bw),0.3));

saveastiff(uint8(BW2), [fname  num2str(n_block) '_seg_nomax.tif']);
convexhull = sum(sum(sum(foreground)));
saveastiff(uint8(foreground), [fname  num2str(n_block) '_ch_seg_nomax.tif']);

%end 
 
%Don't use this
%bw = imbinarize(A,'adaptive','ForegroundPolarity','bright');
